name: Tauri Build and Release

on:
  push:
    tags: ['v*']  # Trigger on version tags
  workflow_dispatch:  # Allow manual triggers

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version
      id: get-version
      run: |
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.get-version.outputs.version }}
        draft: false
        prerelease: false

  build:
    needs: create-release
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.platform }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install dependencies
      run: npm install
    
    - name: Install Tauri CLI
      run: npm install @tauri-apps/cli
    
    - name: Build Tauri app
      run: npm run tauri build -- --target ${{ matrix.platform == 'macos-latest' && 'universal-apple-darwin' || matrix.platform == 'windows-latest' && 'x86_64-pc-windows-msvc' || 'x86_64-unknown-linux-gnu' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tauri-build-${{ matrix.platform }}
        path: |
          src-tauri/target/release/bundle/
          src-tauri/target/release/*.exe
          src-tauri/target/release/*.app
        if-no-files-found: error

  upload-release-assets:
    needs: [create-release, build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
    
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          tauri-build-macos-latest/*.*
          tauri-build-ubuntu-latest/*.*
          tauri-build-windows-latest/*.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}